
# This file defines some globally available directories and file pathes.


###### 
# DIRECTORIES
set(CCB_ROOT_DIR "${CMAKE_SOURCE_DIR}/..")
set(CCB_GENERATED_DIR Generated)				# The directory that holds all files that are generated.
set(CCB_SOURCE_DIR Sources)						# The directory that should hold all non generated files that are checked into the repository.
set(CCB_CONFIG_DIR Configuration)				# The directory that holds files that define cmake variables that are specific to the local project instance, like local paths to dependencies etc.
set(CCB_PACKAGES_ASSEMBLE_DIR _packaging)		# Utility directory which is used to copy the content of the packages together.
set(CCB_PRIVATE_DIR _cppcodebase)				# A directory for storing generated helper files of the CppCodeBase project.
set(CCB_INSTALL_STAGE InstallStage)             # The trailing directory in the default install prefix
set(CCB_CPPCODEBASECMAKE_DIR CppCodeBaseCMake )				# The directory of the CppCodeBaseCMake package
set(CCB_BUILDSCRIPTS_DIR CppCodeBaseBuildscripts )			# The directory of the CppCodeBaseBuildscripts package
set(CCB_JENKINSFILE_DIR CppCodeBaseJenkinsfile )			# The directory of the CppCodeBaseJenkinsfile package
set(CCB_MACHINES_DIR CppCodeBaseMachines )					# The directory of the CppCodeBaseMachines package
set(CCB_PROJECT_CONFIGURATIONS_DIR BuildConfigurations )	# The directory that contains project specific cmake configuration files.

# SPECIAL FILES
# The name of the target dependency graph file that is generated by cmake. 
# This must be the same value as given with the --graphviz option when running the configure step.
set(CCB_TARGET_DEPENDENCY_GRAPH_FILE "${CMAKE_BINARY_DIR}/CppCodeBaseDependencies.dot")	
set(CCB_GRAPHVIZ_OPTIONS_FILE "CMakeGraphVizOptions.cmake" )

# Developer Config file related
set( CCB_PACKAGE_CONFIG_TEMPLATE ${CMAKE_SOURCE_DIR}/${CCB_CPPCODEBASECMAKE_DIR}/Templates/Config.cmake.in )
set( CCB_DEFAULT_CONFIGS_DIR DefaultConfigurations)
set( CCB_CONFIG_FILE_ENDING ".config.cmake")

###### Parameterized locations ######

# returns the root directory of a package in a CppCodeBase
function( ccbGetAbsPackageDirectory packageDirOut package cppCodeBaseRootDir )
	set( ${packageDirOut} "${cppCodeBaseRootDir}/${CCB_SOURCE_DIR}/${package}" PARENT_SCOPE)
endfunction()

# This function defines the name of a packages version file. 
# currently this is: ccbPackageVersion_<package>.cmake 
function( ccbGetPackageVersionFileName filenameOut package )
	set( ${filenameOut} ccbPackageVersion_${package}.cmake PARENT_SCOPE)
endfunction()

# Returns the absolute path to a packages version file
function( ccbGetAbsPathOfPackageVersionFile fullFilenameOut package cppCodeBaseRootDir )
	ccbGetPackageVersionFileName( shortName ${package})
	ccbGetAbsPackageDirectory( packageDir ${package} ${cppCodeBaseRootDir})
	set( ${fullFilenameOut} "${packageDir}/${shortName}" PARENT_SCOPE)
endfunction()

# This function defines the name of a packages c++ header version file. 
function( ccbGetPackageVersionCppHeaderFileName filenameOut package )
	set( ${filenameOut} ccbPackageVersion_${package}.h PARENT_SCOPE)
endfunction()

# This function defines the relative dir from the html directory to the package release files of the last build
function( ccbGetRelLastBuildPackagesDir dirOut package)
	set( ${dirOut} ${CCB_DOWNLOADS_DIR}/${package}/${CCB_LAST_BUILD_DIR} PARENT_SCOPE)
endfunction()

# This function defines the relative dir from the html directory to the package release files of the release versions.
function( ccbGetRelReleasePackagesDir dirOut package version )
	set( ${dirOut} ${CCB_DOWNLOADS_DIR}/${package}/${version} PARENT_SCOPE)
endfunction()

# This function defines the relative path from the html directory to the directory that holds the abi compatibility report that compares the current build to the last build.
function( ccbGetRelCurrentToLastBuildReportDir dirOut package )
	set( ${dirOut} "${CCB_COMPATIBLITY_REPORTS_DIR}/${package}/${CCB_CURRENT_TO_LAST_BUILD_DIR}" PARENT_SCOPE )
endfunction()

# This function defines the relative path from the html directory to the directory that holds the abi compatibility report that compares the current build to the last release.
function( ccbGetRelCurrentToLastReleaseReportDir dirOut package )
	set( ${dirOut} "${CCB_COMPATIBLITY_REPORTS_DIR}/${package}/${CCB_CURRENT_TO_LAST_RELEASE_DIR}" PARENT_SCOPE )
endfunction()

# This function defines the relative path from the html directory to the directory that holds the abi compatibility report that compares two release versions.
function( ccbGetRelVersionToVersionReportDir dirOut package newVersion oldVersion )
	set( ${dirOut} "${CCB_COMPATIBLITY_REPORTS_DIR}/${package}/${oldVersion}-to-${newVersion}" PARENT_SCOPE)
endfunction()

###### Custom targets ######

# relative dirs
set( CCB_DOXYGEN_DIR doxygen )
set( CCB_DOXYGEN_EXTERNAL_DIR external)
set( CCB_GENERATED_DOCS_DIR documentation)						# A subdirectory in the CMAKE_BINARY_DIR that ccbContains generated files that are used by doxygen.
set( CCB_DOWNLOADS_DIR Downloads )
set( CCB_LAST_BUILD_DIR LastBuild)
set( CCB_CGI_BIN_DIR cgi-bin )
set( CCB_OPENCPPCOVERAGE_DIR OpenCppCoverage )
set( CCB_COMPATIBLITY_REPORTS_DIR AbiCheckerReports )
set( CCB_CURRENT_TO_LAST_BUILD_DIR LastBuildToCurrent )
set( CCB_CURRENT_TO_LAST_RELEASE_DIR LastReleaseToCurrent )


# absolute dirs
set( CCB_PROJECT_HTML_ABS_DIR ${CMAKE_BINARY_DIR}/html)																		# The directory that ccbContains the html page of the project
set( CCB_DOXYGEN_OUTPUT_ABS_DIR ${CCB_PROJECT_HTML_ABS_DIR}/${CCB_DOXYGEN_DIR})								# The part of the project page that ccbContains the doxygen output.
set( CCB_DOXYGEN_EXTERNAL_DOT_FILES_ABS_DIR  ${CCB_DOXYGEN_OUTPUT_ABS_DIR}/${CCB_DOXYGEN_EXTERNAL_DIR} )	# The directory within the doxygen documentation where the dependency graph files are put.
set( CCB_PREVIOUS_PACKAGES_ABS_DIR ${CMAKE_BINARY_DIR}/${CCB_PRIVATE_DIR}/PreviousPackages )						# The directory where the abi-compliance-checker targets download the previous packages to.
